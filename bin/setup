#---------------------------------------------------------------------
# Setup omni integrators workbench environment
#---------------------------------------------------------------------
[ ! "$OS" == "Windows_NT" ] && OS=$(uname)
echo
echo "Running on $OS"

# Set home to a better place, just in case we are in the domain
([ ! "$USERPROFILE" == "" ] && [ ! "$HOME" == "$USERPROFILE" ]) && export HOME=$USERPROFILE

# Set the omnidock location to a known place
ODOCK=$HOME/omnidock

# Add to update the omnidock files
mkdir -p $ODOCK && cd $ODOCK


#---------------------------------------------------------------------
# Generate the update next upgrade script in the $ODOCK/bin directory
#---------------------------------------------------------------------
cat > $ODOCK/bin/upgrade << EOF
# update files from github
echo 'update from git'
git config --global core.autocrlf input
git pull
echo
EOF

# make the script runnable
chmod +x $ODOCK/bin/upgrade


#---------------------------------------------------------------------
# Handle desktop 
#---------------------------------------------------------------------
if [ "$OS" == "Windows_NT" ]; then
      # remove old shell links
	  [ -f "$HOME\Desktop\Omni Integrators WorkBench.lnk" ] && rm "$HOME\Desktop\Omni Integrators WorkBench.lnk"
      [ -f "$HOME\Desktop\Omni Consoles.url" ] && rm "$HOME\Desktop\Omni Consoles.url"
      [ -f "$HOME\Desktop\Omni Shell.lnk" ] && rm "$HOME\Desktop\Omni Shell.lnk"
      cscript //nologo "$ODOCK/bin/desk/omnidock.vbs"

elif [ "$OS" == "Darwin" ]; then
   if [ ! -e ~/Desktop ]; then
      echo "no desktop"
   else
      ln -s $ODOCK/data ~/Desktop/Omni\ Integrators\ WorkBench
      ln -s $ODOCK/index.html ~/Desktop/Omni\ Consoles.html
      ln -s $ODOCK/bin/desk/omnidock ~/Desktop/Omni\ Shell
   fi
   
elif [ "$OS" == "Linux" ]; then
   if [ ! -e ~/Desktop ]; then
      echo "no desktop"
   else
<<<<<<< HEAD
      ln -s $ODOCK/bin/desk/omniwb.desktop $HOME/Desktop/omniwb.desktop && chmod +x ~/Desktop/omniwb.desktop
      ln -s $ODOCK/index.html ~/Desktop/Omni\ Consoles
      ln -s $ODOCK/bin/desk/omnidock.desktop ~/Desktop/omnidock.desktop && chmod +x ~/Desktop/omnidock.desktop      
=======
      ln -s $ODOCK/bin/desk/linux/omniwb.desktop $HOME/Desktop/omniwb.desktop && chmod +x ~/Desktop/omniwb.desktop
      ln -s $ODOCK/index.html ~/Desktop/Omni\ Consoles
      ln -s $ODOCK/bin/desk/linux/omnidock.desktop ~/Desktop/omnidock.desktop && chmod +x ~/Desktop/omnidock.desktop      
>>>>>>> 154548d4c99bf0f50a509ee336f971e01643ea3e
   fi
   
else
   echo $OS
fi


#---------------------------------------------------------------------
# boot2docker 
#---------------------------------------------------------------------
boot2docker version 2>/dev/null
if [ "$?" == "0" ]; then   
   
   boot2docker init
   boot2docker start
   
   bip=$(boot2docker ip)
   echo boot2docker-vm ip is $bip
   
   # link in omnidock
   hdo="/home/docker/omnidock"
   boot2docker ssh "if [ ! -d $hdo ]; then ln -Tfs $(pwd) $hdo;fi"
   
   # run my boot2docker init script
   boot2docker ssh "omnidock/bin/init"
   
   # setup docker from host environment   
   boot2docker shellinit > bin/setenv 
   source bin/setenv
      
   # virtual machine manage boot2docker ports
   vbm="VBoxManage"
   if [ "$OS" == "Windows_NT" ]; then
      vbm="$PROGRAMW6432\\Oracle\\VirtualBox\\VBoxManage"
   fi
   
   if [ "$(boot2docker status)" == "running" ]; then
      "$vbm" controlvm "boot2docker-vm" natpf1 "tcp-port5432,tcp,127.0.0.1,5432,,5432" 2>/dev/null
      "$vbm" controlvm "boot2docker-vm" natpf1 "tcp-port9999,tcp,127.0.0.1,9999,,9999" 2>/dev/null
      "$vbm" controlvm "boot2docker-vm" natpf1 "tcp-port9000,tcp,127.0.0.1,9000,,9000" 2>/dev/null
      "$vbm" controlvm "boot2docker-vm" natpf1 "tcp-port9001,tcp,127.0.0.1,9001,,9001" 2>/dev/null
      "$vbm" controlvm "boot2docker-vm" natpf1 "tcp-port9001,tcp,127.0.0.1,9022,,9022" 2>/dev/null
      "$vbm" controlvm "boot2docker-vm" natpf1 "tcp-port9502,tcp,127.0.0.1,9502,,9502" 2>/dev/null
      "$vbm" controlvm "boot2docker-vm" natpf1 "tcp-port9504,tcp,127.0.0.1,9504,,9504" 2>/dev/null
      "$vbm" controlvm "boot2docker-vm" natpf1 "tcp-port9506,tcp,127.0.0.1,9506,,9506" 2>/dev/null
      "$vbm" controlvm "boot2docker-vm" natpf1 "tcp-port9443,tcp,127.0.0.1,9443,,9443" 2>/dev/null
      "$vbm" controlvm "boot2docker-vm" natpf1 "tcp-port8080,tcp,127.0.0.1,8080,,8080" 2>/dev/null
   fi

   boot2docker ssh
   
else 
   # run my boot2docker init script
   ./bin/init
fi
echo
